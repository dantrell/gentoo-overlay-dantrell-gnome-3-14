diff '--exclude=.git' -urN a/js/ui/screenShield.js b/js/ui/screenShield.js
--- a/js/ui/screenShield.js	2015-03-23 14:09:14.000000000 -0400
+++ b/js/ui/screenShield.js	2016-05-29 17:18:48.050057296 -0400
@@ -33,6 +33,9 @@
 const LOCK_ENABLED_KEY = 'lock-enabled';
 const LOCK_DELAY_KEY = 'lock-delay';
 
+const SESSION_SCHEMA = 'org.gnome.desktop.session';
+const IDLE_DELAY_KEY = 'idle-delay';
+
 const LOCKED_STATE_STR = 'screenShield.locked';
 // fraction of screen height the arrow must reach before completing
 // the slide up automatically
@@ -563,6 +566,7 @@
             }));
 
         this._settings = new Gio.Settings({ schema_id: SCREENSAVER_SCHEMA });
+        this._sessionSettings = new Gio.Settings({ schema_id: SESSION_SCHEMA });
 
         this._isModal = false;
         this._hasLockScreen = false;
@@ -1125,13 +1129,21 @@
         let prevIsActive = this._isActive;
         this._isActive = true;
 
-        if (prevIsActive != this._isActive)
-            this.emit('active-changed');
+        let idleTimeout = this._sessionSettings.get_uint(IDLE_DELAY_KEY);
+
+        let id = Mainloop.timeout_add(1000 * idleTimeout, Lang.bind(this, function() {
+            if (this._isActive) {
+                if (prevIsActive != this._isActive)
+                    this.emit('active-changed');
 
-        if (this._aboutToSuspend)
-            this._uninhibitSuspend();
+                if (this._aboutToSuspend)
+                    this._uninhibitSuspend();
 
-        this.emit('lock-screen-shown');
+                this.emit('lock-screen-shown');
+            }
+            return GLib.SOURCE_REMOVE;
+        }));
+        GLib.Source.set_name_by_id(id, '[gnome-shell] this._completeLockScreenShown');
     },
 
     // Some of the actors in the lock screen are heavy in
@@ -1289,7 +1301,7 @@
         }
 
         this._resetLockScreen({ animateLockScreen: animate,
-                                fadeToBlack: true });
+                                fadeToBlack: false });
         global.set_runtime_state(LOCKED_STATE_STR, GLib.Variant.new('b', true));
 
         // We used to set isActive and emit active-changed here,
